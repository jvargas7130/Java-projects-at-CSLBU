import java.util.HashMap;

public class Computer {
	
	private HashMap <Pattern, Integer> description ;
	private Pattern p;
	private int i = 0;
	
	public Computer(){
		description = new HashMap<Pattern, Integer>();
	}
	

	
	public int makePrediction(String newP){
		int prediction = 0;
		
		

		storePattern(new Pattern(newP));

		
		if(!description.isEmpty()){

			if(newP.length() == 4){	
				
				
				String p1 = newP.substring(0, 3) + "f";
				String p2 =  newP.substring(0, 3) + "w";
				String p3 = newP.substring (0,3) + "g";
				
				Pattern pat1 = new Pattern(p1);
				Pattern pat2 = new Pattern(p2);
				Pattern pat3 = new Pattern(p3);
		
			
				
				System.out.println(pat1.getPattern());
				System.out.println(pat2.getPattern());
				System.out.println(p3);
				System.out.println("waht is it "+description.containsKey(pat1));
					if(description.containsKey(pat1)  == false){
						System.out.println("does not contain pat1");
						description.put(pat1, 1);
					}
					
					if(description.containsKey(pat2.getPattern()) == false){
						System.out.println("does not contain pat2");
						description.put(pat2, 0);
					}
					
					if(description.containsKey(pat3.getPattern()) == false){
						System.out.println("does not contain pat3");
						System.out.println("p3");
						description.put(pat3, 0);
					}
				
					System.out.println(description.get(pat1));
					System.out.println(description.get(pat2));
					System.out.println(description.get(pat3));
				
				if((description.get(pat1)  > description.get(pat2)) &&(description.get(pat1)  > description.get(pat3)) ){
					System.out.println("f");
					prediction = 1;
					
				}else if((description.get(pat2)  > description.get(pat1)) &&(description.get(pat2)  > description.get(pat3))){
					System.out.println("w");
					prediction = 2;
				}else if((description.get(pat3)  > description.get(pat1)) &&(description.get(pat3)  > description.get(pat2))){
					System.out.println("g");
					prediction = 3;
				}else{
					int randChoice = (int) (Math.random()*3) + 1;
					System.out.println("rand" +randChoice);
					prediction = randChoice;
				}

			}else if(newP.length() == 8){
			
				
				String p1 = newP.substring(0, 7) + "f";
				String p2 =  newP.substring(0, 7) + "w";
				String p3 = newP.substring (0,7) + "g";
				
				System.out.println(p1);
				System.out.println(p2);
				System.out.println(p3);
				
				Pattern pat1 = new Pattern(p1);
				Pattern pat2 = new Pattern(p2);
				Pattern pat3 = new Pattern(p3);
	
					if(!description.containsKey(pat1)){
						description.put(pat1, 0);
					}
					
					if(!description.containsKey(pat2)){
						description.put(pat2, 0);
					}
					
					if(!description.containsKey(pat3)){
						System.out.println("p3");
						description.put(pat3, 0);
					}
				
						
					
					System.out.println(description.get(pat1));
					System.out.println(description.get(pat2));
					System.out.println(description.get(pat3));
				
				if((description.get(pat1)  > description.get(pat2)) &&(description.get(pat1)  > description.get(pat3)) ){
					System.out.println("f");
					prediction = 1;
					
				}else if((description.get(pat2)  > description.get(pat1)) &&(description.get(pat2)  > description.get(pat3))){
					System.out.println("w");
					prediction = 2;
				}else if((description.get(pat3)  > description.get(pat1)) &&(description.get(pat3)  > description.get(pat2))){
					System.out.println("g");
					prediction = 3;
				}else{
					int randChoice = (int) (Math.random()*3) + 1;
					System.out.println("rand" +randChoice);
					prediction = randChoice;
				}

			}else{
				int randChoice = (int) (Math.random()*3) + 1;
				System.out.println("rand" +randChoice);
				prediction = randChoice;
			}

		}else{
			int randChoice = (int) (Math.random()*3) + 1;
			System.out.println("rand" +randChoice);
			prediction = randChoice;
		}
		
		return prediction;
	}
 
	public void storePattern(Pattern s){
	
		System.out.println("waht is it "+description.get(p));
		
		 i = 1;
		
		if (description.containsKey(p) == true){
			System.out.println("huh");
			description.put(p, i++);
		
		}else{
			description.put(p, i);
		}
	
		System.out.println("waht is it "+description.get(p));
		System.out.println("waht is it "+description.containsKey(p));
		
	
	}
}
